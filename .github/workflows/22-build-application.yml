name: "22 --- [ Build and Publish ]"

on:
  workflow_call:
    inputs:
      stage-env:
        type: string
        description: 'Staging environment (DEVELOP|PRODUCTION)'
        required: true

permissions:
  id-token: write
  contents: read

env:
  TARGET_ACCOUNT_ID: ${{ inputs[format('{0}_ACCOUNT_ID', inputs.stage-env)] || secrets[format('{0}_ACCOUNT_ID', inputs.stage-env)] }}

jobs:
  check-deployment-gate:
    runs-on: ubuntu-latest
    outputs:
      gate-state: ${{ steps.check-gate.outputs.gate-state }}
    steps:
      - name: Check deployment gate
        uses: patternbox/you-build-it-you-run-it/.github/actions/check-deployment-gate@main
        id: check-gate
        with:
          gate-name: 'application'

  synth-chatapp-infra-cdk:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - name: Checkout source code and restore node cache
        uses: patternbox/you-build-it-you-run-it/.github/actions/prepare-node-cache@main
        with:
          working-directory: chatapp-infra

      - name: Cache CDK templates output
        uses: actions/cache@v3
        with:
          path: chatapp-infra/cdk.out
          key: ${{ runner.os }}-cache-cdk-out-${{ hashFiles('chatapp-infra/cdk') }}

      - name: Synthesize CDK code
        working-directory: chatapp-infra
        run: |
          npx cdk synth

  deploy-database-stack:
    runs-on: ubuntu-latest
    needs: [ synth-chatapp-infra-cdk ]
    if: false
    steps:
      - name: Checkout source code and restore node cache
        uses: patternbox/you-build-it-you-run-it/.github/actions/prepare-node-cache@main
        with:
          working-directory: chatapp-infra

      - name: Cache CDK templates output
        uses: actions/cache@v3
        with:
          path: chatapp-infra/cdk.out
          key: ${{ runner.os }}-cache-cdk-out-${{ hashFiles('chatapp-infra/cdk') }}

      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/${{ env.PROJECT_NAME }}-github-deployer
          role-duration-seconds: 900
          role-skip-session-tagging: true

      - name: Setup database stack
        working-directory: chatapp-infra
        run: |
          npx cdk deploy DatabaseStack --app 'cdk.out/' --require-approval never
