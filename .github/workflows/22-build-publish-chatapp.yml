name: "22 --- [ Build and Publish ]"

on:
  workflow_call:
    inputs:
      stage-env:
        type: string
        description: 'Staging environment (DEVELOP|PRODUCTION)'
        required: true

permissions:
  id-token: write
  contents: read

env:
  TARGET_ACCOUNT_ID: ${{ inputs[format('{0}_ACCOUNT_ID', inputs.stage-env)] || secrets[format('{0}_ACCOUNT_ID', inputs.stage-env)] }}

jobs:
  build-chatapp-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code and restore node cache
        uses: patternbox/you-build-it-you-run-it/.github/actions/prepare-node-cache@main
        with:
          working-directory: chatapp-ui

      - name: Cache Angular dist/** folder
        uses: actions/cache@v3
        id: cache-ui-dist
        with:
          path: chatapp-ui/dist
          key: ${{ runner.os }}-cache-ui-dist-${{ hashFiles('chatapp-ui/**') }}

      - name: Build Angular UI app
        working-directory: chatapp-ui
        if: ${{ steps.cache-ui-dist.outputs.cache-hit != 'true' }}
        run: |
          npm install -g @angular/cli@15.1.3
          ng build

  synth-chatapp-infra-cdk:
    runs-on: ubuntu-latest
    needs: [ build-chatapp-ui ] # requires chatapp-ui/dist folder content
    steps:
      - name: Checkout source code and restore node cache
        uses: patternbox/you-build-it-you-run-it/.github/actions/prepare-node-cache@main
        with:
          working-directory: chatapp-infra

      - name: Restore Angular dist/** folder
        uses: actions/cache@v3
        id: cache-ui-dist
        with:
          path: chatapp-ui/dist
          key: ${{ runner.os }}-cache-ui-dist-${{ hashFiles('chatapp-ui/**') }}

      - name: Cache CDK templates output
        uses: actions/cache@v3
        id: cache-cdk-out
        with:
          path: chatapp-infra/cdk.out
          key: ${{ runner.os }}-cache-cdk-out-${{ hashFiles('chatapp-infra/bin/**', 'chatapp-infra/lib/**', 'chatapp-infra/resources/**') }}

      - name: Synthesize CDK code
        working-directory: chatapp-infra
        if: ${{ steps.cache-cdk-out.outputs.cache-hit != 'true' }}
        run: |
          npx cdk synth

  check-deployment-gate:
    runs-on: ubuntu-latest
    needs: [ build-chatapp-ui, synth-chatapp-infra-cdk ]
    outputs:
      gate-state: ${{ steps.check-gate.outputs.gate-state }}
    steps:
      - name: Check deployment gate
        uses: patternbox/you-build-it-you-run-it/.github/actions/check-deployment-gate@main
        id: check-gate
        with:
          gate-name: 'application'

  deploy-authentication-stack:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: AuthenticationStack

  deploy-database-stack:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: DatabaseStack
