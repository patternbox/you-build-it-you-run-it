name: "23 --- [ Publish Application ]"

on:
  workflow_call:
    inputs:
      stage-env:
        type: string
        description: 'Staging environment (DEVELOP|PRODUCTION)'
        required: true

permissions:
  id-token: write
  contents: read

env:
  TARGET_ACCOUNT_ID: ${{ inputs[format('{0}_ACCOUNT_ID', inputs.stage-env)] || secrets[format('{0}_ACCOUNT_ID', inputs.stage-env)] }}

jobs:
  check-deployment-gate:
    runs-on: ubuntu-latest
    outputs:
      gate-state: ${{ steps.check-gate.outputs.gate-state }}
    steps:
      - name: Check deployment gate
        uses: patternbox/you-build-it-you-run-it/.github/actions/check-deployment-gate@main
        id: check-gate
        with:
          gate-name: 'application'

  deploy-authentication-stack:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: AuthenticationStack

  deploy-database-stack:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: DatabaseStack

  deploy-websocket-stack:
    runs-on: ubuntu-latest
    needs: [ deploy-authentication-stack, deploy-database-stack ]
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: WebsocketStack

  deploy-rest-api-stack:
    runs-on: ubuntu-latest
    needs: [ deploy-websocket-stack ]
    steps:
      - name: Checkout, restore CDK cache and deploy stack
        uses: patternbox/you-build-it-you-run-it/.github/actions/deploy-cdk-stack@main
        with:
          stack-name: RestApiStack
